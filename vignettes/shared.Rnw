\documentclass[12pt]{article}
\usepackage{amsmath}
\addtolength{\textwidth}{1in}
\addtolength{\oddsidemargin}{-.5in}
\setlength{\evensidemargin}{\oddsidemargin}

%\VignetteIndexEntry{Shared coefficients and shared baseline}
%\VignetteEngine{knitr::knitr}
%\VignetteEncoding{UTF-8}

\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\Lhat}{\hat\Lambda}
\newcommand{\lhat}{\hat\lambda}
\newcommand{\yhat}{\hat y}
\newcommand{\phat}{\hat p}
\newcommand{\bhat}{\hat \beta}

\title{Shared coefficients and shared baselines in multistate models}
\author{Terry Therneau and Elizabeth Atkinson}
\date{May 2025}

<<setup, echo=FALSE>>=
library(survival)
library(knitr)
library(splines)
opts_chunk$set(comment=NA, tidy=FALSE, highlight=FALSE, echo=TRUE,
               fig.width=6.5, fig.height=4, fig.path="figures/",
               device="pdf", dev.args=list(pointsize=8),
               cache=TRUE,   background="#ffffff",
               prompt=TRUE, 
               strip.white=FALSE)
options(contrasts= c("contr.treatment", "contr.poly"),
        show.signif.stars = FALSE, continue=" ", width=70)
#palette("Okabe-Ito") # color blind friendly
@

\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle

\section{Background}
A multi-state hazards (MSH) model will model the transitions between multiple
<<<<<<< HEAD
states.  An example is analysis of the NAFLD data, whose transition diagram
is shown in figure \ref{nafld1}; living patients will have 0--3 of the
=======
states.  One example is analysis of the NAFLD data, whose transition diagram
is shown in Figure \ref{nafld1}; living patients will have 0--3 of the
>>>>>>> 8ff55de7e1f868ab1292de9af586483421aa04fa
following metabolic comorbidities: diabetes, hypertension, and
hyperlipidemia.
In this figure there are 10 transitions (arrows).
For any given pair of transitions a:b and c:d there are 6 different choices
to organize the coefficients and  baseline hazards,
shown in Table \ref{ch8choice}. This document explores both the
technical and statistical aspects of those choices.

\begin{table} \centering
  \begin{tabular}{cccc}
    &\multicolumn{3}{c}{Baseline hazard} \\
    & Separate & Proportional & Identical  \\ \hline
    Separate coefficients & 1& 2 & 3\\
    Shared coefficients & 4 & 5 & 6 \\
  \end{tabular}
\caption{Choices for any pair of transitions in a multistate
  model.}
 \label{ch8choice}
\end{table}

\section{Data}
We will use two running examples in this document.
The first is data on non-alcoholic liver disease (NAFLD) which is represented
by the state space shown in Figure \ref{nafld1}.
Living subjects can have one or more of three metabolic comorbidities of
diabetes, hypertension and hyperlipidemia. The study focuses on the impact of
a NAFLD diagnosis on the rate at which subjects progress through the 
three states.

\begin{figure}
<<<<<<< HEAD
<<nafld1, echo=FALSE>>=
=======
<<nafld1, echo=FALSE, fig=TRUE>>=
>>>>>>> 8ff55de7e1f868ab1292de9af586483421aa04fa
mstate <- c("0mc", "1mc", "2mc", "3mc", "Death")
mmat <- matrix(0, 5, 5, dimnames=list(mstate, mstate))
mmat[1,2] <- mmat[2,3] <- mmat[3,4] <- 1
mmat[1:4, 5] <- 1
mmat[1,3] <- mmat[1,4] <- mmat[2,4] <- .5
statefig(rbind(4,1), mmat, alty=c(1,2,1,2,2,1,1,1,1,1))
@ 
  \caption{State space for the NAFLD data. The dashed lines are transitions
   that would not be observed if monitoring were continuous, but are
  present in the observed data. }
 \label{nafld1}
\end{figure}

<<ndata, echo=FALSE>>=
ndata <- tmerge(nafld1[,1:8], nafld1, id=id, death= event(futime, status))
ndata <- tmerge(ndata, subset(nafld3, event=="nafld"), id, 
                nafld= tdc(days))
ndata <- tmerge(ndata, subset(nafld3, event=="diabetes"), id = id,
                diabetes = tdc(days), e1= cumevent(days))
ndata <- tmerge(ndata, subset(nafld3, event=="htn"),  id = id,
                htn = tdc(days), e2 = cumevent(days))
ndata <- tmerge(ndata, subset(nafld3, event=="dyslipidemia"), id=id,
                lipid = tdc(days), e3= cumevent(days))
ndata <- tmerge(ndata, subset(nafld3, event %in% c("diabetes", "htn", 
                                                   "dyslipidemia")), 
                id=id, comorbid= cumevent(days))
# summary(ndata)
with(ndata, if (any(e1>1 | e2>1 | e3>1)) stop("multiple events"))
ndata$cstate <- with(ndata, factor(diabetes + htn + lipid, 0:3, 
                                   c("0mc", "1mc", "2mc", "3mc")))
temp <- with(ndata, ifelse(death, 4, comorbid))
ndata$event <- factor(temp, 0:4, 
         c("censored", "1mc", "2mc", "3mc", "death"))
ndata$age1 <- ndata$age + ndata$tstart/365.25   # analysis on age scale
ndata$age2 <- ndata$age + ndata$tstop/365.25

scount <- table(ndata$cstate) # used in text later
@

Below is the transition table for the data set.  Biologically, a transition
directly from 0 to 3 of the comorbidities can not occur;
we observe 4 such transitions because our observation of any subject is
intermittent.
These ``jump'' transitions, the dotted lines in Figure \ref{nafld1},
are a motivation for shared coefficient models.

Note: Results for a MSH fit are in column major order,
as is usual for R matrices.  The output will have the 0mc:1mc transition,
then 0mc:2mc, ..., then 1mc:2mc, ..., 3mc:death. 

<<ndata2>>= 
check1 <- survcheck(Surv(age1, age2, event) ~ nafld + male, data=ndata, 
                   id=id, istate=cstate)

check1$transitions
@ 


<<<<<<< HEAD
\begin{figure}
<<pbc1, echo=FALSE>>=
=======
The second example uses the primary biliary cholangitis (PBC) data. 
The states in this example are created by categorization of the continuous
bilirubin variable and
the state space is shown in Figure \ref{pbc1}.
\begin{figure}
<<pbc1, echo=FALSE, fig=TRUE>>=
>>>>>>> 8ff55de7e1f868ab1292de9af586483421aa04fa
pstate <- c("bili <=1", "bili 1-4", "bili > 4", "Death")
pmat <- matrix(0, 4, 4, dimnames= list(pstate, pstate))
pmat[1,2] <- pmat[2,3] <- 1
pmat[2,1] <- pmat[3,2] <- 1.5
pmat[1,3] <- .5; pmat[3,1] <- 1.5
pmat[1:3, 4] <- 1
statefig(rbind(3,1), pmat) #, alty=c(1,2,1,1, 2,1,1,1,1))
@ 
  \caption{State space for the PBC example.}
  \label{pbc1}
\end{figure}

The primary biliary cholangitis state space is shown in Figure \ref{pbc1}.
The states in this example are created by categorization of the continuous
bilirubin variable. 
Primary biliary cholangitis is an inflammatory disease, thought to be of
auto-immune origin, characterized by a slow but inexhortable loss of the small
bile ducts in the liver, as scar replaces functional tissue. 
Bilirubin and other markers of
liver compromise rise slowly over time, then more quickly once excess
capacity has been exhausted. 
Figure \ref{pbc1} shows a multi-state model that includes bilirubin
progression.  Many of the reverse
transitions (dotted lines in the figure) will be subjects whose true 
bilirubin value is currently near one of the cut points. There are
very few observed jumps from normal bilirubin to $>4$ or vice-versa
(3 and 1, respectively).

<<pdata, echo=FALSE>>=
pdat0 <- subset(pbcseq, !duplicated(id))
pdat0$bili3 <- cut(pdat0$bili, c(0,1,5,100), c("normal", "1-4", ">4"))
pdat0$agrp  <-  cut(-pdat0$albumin, c(-100, -3.5, -3, 0),
                   c("normal", "3-3.5", "<3"))
pdat0$death <- 1*(pdat0$status ==2)
pdat0$year  <- pdat0$futime/365.25   # so I can skip "xscale=365.25" below
pdata <- tmerge(pdat0[,c(1,4:6)], pdat0, id=id,
                 death = event(futime, death),
                 options= list(tstart="day1", tstop="day2"))
# I have arbitrarily decided not to make use of any new lab within 30
#  days of death.  This loses 33 bilirubin values.
ptemp <- subset(pbcseq, !(status ==2 & (futime <= (day + 7))))
ptemp$bili3 <- cut(ptemp$bili, c(0, 1, 4, 100), c("normal", "1-4", ">4"))
ptemp$agrp  <- cut(-ptemp$albumin, c(-100, -3.5, -3, 0),
                   c("normal", "3-3.5", "<3"))
pdata <- tmerge(pdata, ptemp, id=id, edema = tdc(day, edema),
                bili= tdc(day, bili), albumin = tdc(day, albumin),
                protime = tdc(day, protime),
                bili3 = tdc(day, bili3), b3= event(day, as.numeric(bili3)),
                agrp  = tdc(day, agrp))
# To use bili3, a factor, as an event I'd first need to add censor as a 
#  first level.  But for a numeric tmerge knows to use 0=censor.

# Now create the multistate dataset using bilirubin groups
# 1. By definition, bilirubin can only change on 'pbcseq' days
# 2. Don't count two visits in the same state as a transition
temp <- with(pdata, ifelse(death, 4,
                           ifelse(as.numeric(bili3)==b3, 0, b3)))
pdata$bstate <- factor(temp, 0:4, c("none", "normal", "1-4", ">4", "death"))
pdata$age1 <- with(pdata, age + day1/365.25)
pdata$age2 <- with(pdata, age + day2/365.25)
pdata$year1 <- pdata$day1/365.25
pdata$year2 <- pdata$day2/365.25
pcheck <- survcheck(Surv(year1, year2, bstate) ~ 1, pdata, id=id, istate=bili3)
@ 

\section{Separate hazards}
\subsection{Separate coefficients}
Separate coefficients and separate hazards for each transition,
case 1 in Table \ref{ch8choice}, is the 
default for a multi-state hazards (MSH) model using \code{coxph}.
Thus the model formula is particularly simple.
<<>>=
pcheck$transitions
@

\section{Separate hazards}
\subsection{Separate coefficients}
Separate coefficients and separate hazards for each transition is the 
default for a multi-state hazards (MSH) model using \code{coxph}. The code
below uses the NAFLD data.
>>>>>>> 8ff55de7e1f868ab1292de9af586483421aa04fa

<<nfit1, warning=TRUE, message=TRUE>>=
nfit1 <- coxph(Surv(age1, age2, event) ~ nafld + male, data = ndata,
               id = id, istate = cstate)
round(coef(nfit1, matrix=TRUE), 2)

## internal mapping matrices
nfit1$cmap
nfit1$smap

## number of current states (cstate) in data
table(ndata$cstate)
@ 

Two internal matrices \code{cmap} and \code{smap} direct the
computation.
The first matrix shows the mapping of coefficients to the transitions and 
the second matrix shows the strata.  In this case, there are separate nafld and male coefficients for
each transition, and a separate stratum for each.
The male coefficient for the 1:4 transition did not converge, more on this
below.

The \code{cmap} and \code{smap} matrices are used by the internal 
\code{stacker} routine to create expanded
data used for the partial likelihood solution.
The result has an expanded \code{X}, \code{Y} and \code{transition} 
variables which contain first all the data rows for transition 1 
(0mc:1mc, \Sexpr{scount[1]} rows), 
then for transition 2 (0mc:2mc, \Sexpr{scount[1]} rows, 
etc. up to transtion 10 (3mc:death, \Sexpr{scount[4]} rows).
The transition variable has repeated values of 1, 1, 1, \ldots, 2, 2, 2, etc.
and marks out the blocks.
The first block of the expanded \code{Y} has a simple 0/1 status with 1 for
a transition from 0mc to 1mc, 0 otherwise.
The expanded \code{X} matrix is block diagonal for this fit, as shown in
equation \eqref{blockdiag}.
Here $X^{(1)}$ is all the rows of the data that are at risk for the first
transtion (\Sexpr{scount[1]} rows, 2 columns), and etc. to $X^{(10)}$ for the
tenth transition.
The final matrix has 20 columns, one for each coefficient, and
\Sexpr{sum(4:1 * scount)} rows.
The 20 coefficients for the 10 transitions are now fit all at once using
a single call to the standard Cox model fitting routine \code{agreg.fit},
with the transition as a strata.

\begin{equation}
 \left( \begin{array}{cccc} X^{(1)} &0 & \ldots & 0 \\
   0 & X^{(2)} & \ldots & 0 \\
   0 & \vdots & \ddots & \vdots \\
   0 &  0  &     0     & X^{(10)} \end{array} \right) \label{blockdiag}
\end{equation}

\subsection{Shared coefficients}
You will have noticed that \code{nfit1} gave a warning message the coefficient
8 appears to be infinite, which is the estimated male effect for the 1:4
transition. The estimated risk of exp(12.8) = 362,000 fold for males clearly 
sticks out from the other coefficients.
 There are only 4 0mc to 3mc transitions in the data, and all of
them are males, so indeed the MLE solution is $\bhat= \infty$;
there simply are not enough events in this stratum to estimate 2 coefficients.
The other two jumps of Omc:2mc and 1mc:3mc also have small counts.

Biologically, we know that acquisition of 2 new comorbidities on the same
exact day does not actually happen. An alternative model is to have coefficients
for an increase from 0mc to ``one or more'' and from 1mc to ``two or more''.
This is shown below.

<<nfit2>>=
nfit2 <- coxph(list(Surv(age1, age2, event) ~ nafld + male,
                    1:2 + 1:3 + 1:4 ~ nafld + male / common,
                    2:3 + 2:4 ~ nafld + male/common),
               data=ndata, id= id, istate= cstate)
nfit2$cmap

round(coef(nfit2, matrix=TRUE), 2)
@ 

When the model formula is a list of formulas, the first formula is the
default for all transtions and subsequent line amend that formula for
selected transtions.  Variables can be add or removed in the same way
as \code{update.formula}, or their contribution modified as shown here.
The \code{common} modifier signals common coefficients for these variables
and transitions.

The final model has 14 coefficients instead of 20, and
the overall risk of exp(.18) = 1.2 for males for the 0:mc to 1+ transition
is much more sensible.
The expanded X matrix in this model will have the same number of rows 
as \code{nfit1}, but 14 rather than 20 columns.
It is no longer block diagonal, column 1 for instance now has non-zero entries
in 3 different transition blocks.

The coefficient vector found in the fit object has 14 unique entries and the
estimated variance/covariance matrix is 14 by 14, these are what are returned
by the \code{coef} and \code{vcov} functions.
These choices make the MSH model results better fit in to the standard Cox
model framework. 

\subsection{Predicted values}
For predicted values from a MSH model, we will more often want to show 
separate predictions for each transition.
For linear predictors, this is facilitated by the \code{matrix} argument
to \code{coef.coxphms} and \code{vcov.coxphms}, the MSH methods for the
coef and vcov methods.
For example

<<predict1>>=
eta2 <- model.matrix(nfit2) %*% coef(nfit2, matrix=TRUE)
dim(eta2)
nrow(ndata)

v2 <- vcov(nfit2, matrix=TRUE)
dim(v2)
@  

The \code{model.matrix} function for the fit returns the standard X matrix, 
which is the correct object for this task, not the expanded one which was
needed (temporarily) for computing the fit. 
Then \code{eta2} is a matrix with one row for each observation in the
data set and one column for each transition.
This matrix contains more values than we need, formally.  Observation 1
is a row with current state of \code{cstate = 0mc}, for instance, so one could
argue that the 2mc:death entry of row 1 is not ``relevant'' to that row of 
the data.

For predicted probability in state curves, however, we do want all the predicted
hazards for a given hypothetical subject, since all the hazards are needed to
compute absolute risks. Remember that a
predicted curve is for a particular subject (covariate values) at a particular
time (age) in a particular starting state.
We find it helpful to use the mental picture
of ``prediction for the patient currently sitting across from me in the
examination room'', i.e., absolute prediction is always specific.
For an ordinary alive/dead KM where everyone starts at time 0 we don't have
to think about these things, but here we do.

<<predict1b, fig=TRUE>>=
# predicted curves for a 50 year old female with and without NAFLD, who
#  starts with none of the comorbidities
dummy <- data.frame(nafld= 0:1, male=0)
pstate2 <- survfit(nfit2, newdata=dummy, start.time=50, p0=c(1,0,0,0,0))
plot(pstate2, col=rep(1:5, each=2), lty=1:2, lwd=2) #, cumprob=TRUE)
# I don't like this plot, but I'm not sure the alternative below is better
# plot(pstate2, cumprob=1:4, col=rep(1:4, each=2), lty=1:2, lwd=2)
@ 
  
(Yet to do: show examples with predict())

\section{Shared proportional hazards}
An alternative to separate hazards is shared proportional hazards.
We will separate this into three cases: common endpoint will be pairs
of transitions such as A:C and B:C end in a common state, disjoint
a pair like A:C and B:D, and common origin A:B and A:C.

\subsection{Common endpoint}
This has been by far the most common example in our work.
As an example, we might assume that the 4 transitions from comorbidity to death,
in the NAFLD data, have the same shape but a different scale.
That is
\begin{align}
  \lambda_{1d}(t,x) &= \lambda_{0d}(t) \exp(\gamma_1)\exp(X\beta_{.8}) 
      \label{nshare1}\\
  \lambda_{2d}(t,x) &= \lambda_{0d}(t) \exp(\gamma_2)\exp(X\beta_{.9}) 
       \label{nshare2} \\
  \lambda_{3d}(t,x) &= \lambda_{0d}(t) \exp(\gamma_3)\exp(X\beta_{.10}) 
     \label{nshar3}\\
\end{align}
where $\lambda_{kd}$ is the hazard for $k$ comorbidities to death, and we
have selected the appropriate column of the coefficient matrix $\beta$.
For both \code{nfit1} and \code{nfit2} the matrix form has has 10 columns,
1 per transition, with the last 4 being the transitions to death.

Here is sample code to fit this model, retaining the shared coefficients for
select mc:mc transitions introduced above for model \code{nfit2}.  
Behind the scenes, the code bundles the
$\gamma$ and $\beta$ coefficients together, in order to jointly estimate
both of them using the \code{agreg.fit} routine.
We take advantage of the use of ``1'' as the representation of an
intercept in the formula modeling language of R,
along with the fact that the basline hazard can be thought of
as the ``intercept'' term of a MSH model, to create a compact notation.

<<nfit3>>=
nfit3 <- coxph(list(Surv(age1, age2, event) ~ nafld + male,
                    1:2 + 1:3 + 1:4 ~ nafld + male / common,
                    2:3 + 2:4 ~ nafld + male/common,
                    0:5  ~ cstate + 1 / common), 
               data=ndata, id= id, istate= cstate)
print(nfit3, digits=2)
@

Since the current state of each observation is a factor variable \code{cstate},
the default coding for factors in R does exactly what we wished.
We see that after adjustment for sex and NAFLD status, those with 3
comorbidities have a higher death rate than 0mc, which is not a surprise, but
also that 1mc appears to be lower than 0mc.  More on that will be discussed
further below. 

One aspect of the printout which is potentially misleading is that all 3
cstate coefficients appear for all 4 transitions.
However, for the 1:5 transition (0mc:death) the three 0/1 dummy variables
\code{cstate1mc}, \code{cstate2mc} and \code{cstate3mc} will all be 0. The
coefficients that appear in the 1:5 printout above will never be used. 
For the 2:5 transition only \code{cstate1mc} is non-zero so the 
\code{cstate2mc} and \code{cstate3mc} coefficients are redundant, with
similar comments for the 3:5 and 4:5 transtions.
We can fit an equivalent model with somewhat simpler printout by creating
a single 0/1 dummy variable which is 0 only for the 0mc state.
The labels in this result more clearly differentiate the $\gamma$ and
$\beta$ coefficients.

<<nfit3b>>=
ndata$notzero <- 1*(ndata$cstate != "0mc")
nfit3b <- coxph(list(Surv(age1, age2, event) ~ nafld + male,
                    1:2 + 1:3 + 1:4 ~ nafld + male / common,
                    2:3 + 2:4 ~ nafld + male/common,
                    c(2,3,4):5 ~ notzero,
                    0:5  ~ 1 / common), 
               data=ndata, id= id, istate= cstate)
print(nfit3b, digits=2)

all.equal(nfit3$loglik, nfit3b$loglik)
@ 

Another approach which provides an even clearer printout is to use
the \code{shared} option.

<<nfit3c>>=
nfit3c <- coxph(list(Surv(age1, age2, event) ~ nafld + male,
                    1:2 + 1:3 + 1:4 ~ nafld + male / common,
                    2:3 + 2:4 ~ nafld + male/common,
                    0:5 ~ nafld + male/ shared),
               data=ndata, id= id, istate= cstate)

round(coef(nfit3c, matrix=TRUE), 2)
all.equal(nfit3c$loglik, nfit3$loglik)
@  

We stated that the baseline hazard plays the role of an intercept, and it
does so in another way that is less often noticed.
In a linear model, the intercept term makes the fit invariant to simple changes
in a covariate, e.g., if we replace some covariate $x$ in model with $z= x+2$,
then the predicted values $\hat y_i$ for each observation remain unchanged,
as do all of the coefficients and their estimate standard errors, with the
exception of the intercept.
A more common case with the same behavior is replacement of a 0/1 covariate 
with 1/0, e.g., one fit coded 0/1= female/male and another 0/1= male/female. 
Compare the coefficients of the modified model below.  Nothing changes 
\emph{except} the ph(1:5) coefficients, and they do they shift by a constant.
This means that we must be cautious about interpreting the absolute values
of these coefficients, and even more associated p-values, just as would be
the case for intercepts a linear ANCOVA model.

<<nfit3d>>=
ndata$male23 <- ndata$male + 2  # code male as 2/3
nfit3d <- coxph(list(Surv(age1, age2, event) ~ nafld + male23,
                    1:2 + 1:3 + 1:4 ~ nafld + male23 / common,
                    2:3 + 2:4 ~ nafld + male23/common,
                    0:5 ~ nafld + male23/ shared),
               data=ndata, id= id, istate= cstate)

round(coef(nfit3c, matrix=TRUE), 2)

round(coef(nfit3d, matrix=TRUE), 2)
@ 

However, just as in a linear model, this shift does not affect absolute 
predictions, which are created using \code{survfit}.
Notice that the covariates associated with the $\gamma$ coefficients are
not a part of newdata, these coefficients belong to the \emph{state} and
not to the subject.

<<pstate2>>=
dummy$male23 <- dummy$male + 2
pstate3c <- survfit(nfit3c, newdata=dummy, start.time=50, p0=c(1,0,0,0,0))
pstate3d <- survfit(nfit3d, newdata=dummy, start.time=50, p0=c(1,0,0,0,0))
all.equal(pstate3c$pstate, pstate3d$pstate)
@ 

The survfit routine recognizes $\gamma$ coefficients in the model by their 
association with the special variable name \code{ph(1:5)}. 
(I have little doubt that someone, somewhere will eventually create a variable 
name enough like this to fool my code, and then post it as a bug.)
For probability in state curves based on model \code{nfit3b} a bit more is
needed: the variable \code{notzero} looks, to the survfit code, no different
than any other; the routine needs the user's help to identify that this 
variable is associated with $\gamma$ rather than $\beta$ terms.
At this time, the method is to add \code{notzero} to the dummy data set
with a value of NA. From a user interface perspective simply leaving
\code{notzero} out of the dummy data set would be cleaner, but the
\code{model.matrix} routine from base R, which I depend on, is unhappy if a
variable found in the model formula is missing from newdata. I don't yet have
a way to work around that.

To do: example using nfit3b, once I have the NA code debugged.

To do: add the PBC example.

\subsection*{Summary}
One aspect of this that we have not mentioned is that with a set of transitions 
A:D + B:D + C:D to a common final state, the risk sets also make sense.
Since no subject can be two places at once (in two states at the same time),
the risk set for the shared hazard at time $t$ = (in state A at $t$) 
+ (in state B at $t$) + (in state C at $t$) will have no duplicate subjects.
The Cox partial likelihood term for an event at $t$ will thus have a proper
denominator, i.e., a weighted sum over all those at risk, where
$\exp(X\bhat)$ are the risk weights.

\subsection{Shared hazards, common starting state}
This is the case where a pair of transitions A:B and A:C are considered to have
a common hazard shape.  At this point:
\begin{itemize}
  \item We have not encountered any examples where such an assumption makes
    biological sense.  Without a concrete example, it has been impossible to
    be completely sure what the software \emph{should} do in this case.
  \item The current code will create risk sets with multiple copies of the
    same subject. We are not at all sure that this makes sense, in fact
    we rather doubt it. (Exception, no duplicates are created if A:B and A:C 
    have common coefficients for a variables.)
\end{itemize}

If any reader has such a use case we would be delighted to hear of it.

\subsection{Shared hazard, disjoint pairs}
The second subcase is a shared baseline hazard for a
transition pair like A:B and C:D. 
In general, it may be hard to think of situations where we would be willing
to assume that these two transitions, to two disparate endpoints B and D,
would have hazards of the same shape.
We have encountered one example, however, which has motivated the details
in our code.  It can be
seen as an extension of the PBC example.

To do: the example for this is the MCSA data, where I have the CU:dementia
transition, then break up CU into substates based on CMC score, a time-dependent
covariate, and also break up dementia by CMC score.  Almost all the new
CU:dementia transitions will be of the form CU+CMC1 to dementia+CMC1
dementia based on CMC score.

One of the important aspects of this example is that the \code{stacker} routine
includes a step of removing any duplicate rows in the expanded $X^{(k)}$ matrices
(duplicate subject and row) for each shared baseline $k$.  If the coefficients
are shared, as in this case, that ensures no subject appears twice in the
same risk set. (We do this because of the ``almost all'' statement in the prior
paragraph. Because of a single CU+CMC2 to dementia+CMC3 and xx to dementia+CMC2,
all of the CU+CMC2 subjects would appear twice, which is clearly not what
we want.)


\section{Identical hazards}
Identical hazards are a problem child. A major issue is that such models can
be at the mercy of how covariates are coded. 
As a simple case, consider the NAFLD data, and assume that the transitions to
death have an identical hazard rather than a proportional one.
The impact of changing the coding of male sex from 0/1 to 2/3 is profound,
with a different log-likelihood and multiple coefficient changes.

<<nfitid, fig=TRUE>>=
nfit4a <- coxph(list(Surv(age1, age2, event) ~ nafld + male, 
                     1:2 + 1:3 + 1:4 ~ nafld + male/common, 
                     2:3 + 2:4 ~ nafld + male/common, 
                     0:5 ~ 1/common),
                data = ndata, id = id, istate = cstate)
nfit4b <- coxph(list(Surv(age1, age2, event) ~ nafld + male23, 
                     1:2 + 1:3 + 1:4 ~ nafld + male23/common, 
                     2:3 + 2:4 ~ nafld + male23/common, 
                     0:5 ~ 1/common),
                data = ndata, id = id, istate = cstate)

temp <- rbind(male01= nfit4a$log, male23= nfit4b$log)
colnames(temp) <- c("Initial loglik", "Final loglik")
temp

plot(coef(nfit4a), coef(nfit4b), xlab="Coefficients, model with male as 0/1",
     ylab= "Coefficients, male as 2/3")
abline(0,1)
@ 

Many discussions mention a ``common hazard function'' as a modeling idea, but
few have followed through on the consequences of assuming that $\gamma =1$ 
uniformly.  
If we also force common coefficients for all the covariates then the problem
goes away, but that becomes, in essence, a single transition model.

Speculation:
\begin{itemize}
 \item The same sort of confusions occur in linear models with regression 
   through the origin.  I don't know if that association is helpful, however.
 \item I think that part of the problem above is that the overall death rate
   for 3mc:death is substantially higher than 0mc:death, and so any other
   variable that is out of balance will get recruited as an alias for the
   missing $\gamma$ coefficient. NAFLD prevalence, for instance, is .89 for
   the 0mc stratum and .56 for the 3mc stratum.
\end{itemize}

   
\end{document}
